OpenIDE.Net integrates with programming languages through both executable output and tcp communication.

------------------------------------------------------- GENERAL OUTPUT ---------------------------------------------------------

Error description with no line separators
	RESPONSE FORMAT:
		error|ERROR_DESCRIPTION

----------------------------------------------------- REQUIRED INTEGRATION -----------------------------------------------------

Getting command definitions for this language extension
	PARAMETER:
		get-command-definitions
	
	RESPONSE FORMAT:
		// Wrapping the command name with [] means the command is optional
		// This is the definition response for the following commands:
		// new file FILE_NAME
		// new directory DIR_NAME

		new|"Template command for new file"
			file|"Creates a new file"
				FILE_NAME|"The path/name of the file you want to create" end
			end
			directory|"Creates a new directory"
				DIR_NAME|"Long description where every line
							will be trimmed and new line is replaced by space" end
			end
		end

Plugin language
	PARAMETER:
		get-language
	
	RESPONSE FORMAT:
		// String describing the language like:
		C#

Suppoerted file extensions. This determintes what files will be sent over for change tracking
	PARAMETER
		crawl-file-types
	
	RESPONSE FORMAT:
		.csproj|.cs

Crawl directories and/or files
	PARAMETER:
		crawl-source PATH_TO_FILE_CONTIAINING_LINE_PR_FILE_OR_DIR_TO_CRAWL
	
	RESPONSE FORMAT:
		// Project is optional. Other than that the hierarchy is as follows
		// Indentation is only to show hierarchy not required in output
		[project|PROJECT-PATH]
			file|FILE-PATH
				signature|SIGNATURE|NAME|TYPE|OFFSET|LINE|COLUMN
				reference|SIGNATURE|OFFSET|LINE|COLUMN
